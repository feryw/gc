name: Build gc and libusbgx in chroot and release

on:
  repository_dispatch:
  workflow_dispatch:
  
jobs:
  build-chroot:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install runner dependencies
      run: |
        sudo apt update
        sudo apt install -y qemu-user-static binfmt-support jq curl xz-utils grep coreutils

    - name: Prepare container rootfs
      run: |
        mkdir -p /opt/chroot
        curl -L -o /opt/chroot/rootfs.tar.xz https://images.linuxcontainers.org/images/debian/bookworm/armhf/default/20250715_05:24/rootfs.tar.xz
        mkdir -p /opt/chroot/rootfs
        sudo tar -xf /opt/chroot/rootfs.tar.xz -C /opt/chroot/rootfs
        rm /opt/chroot/rootfs.tar.xz

    - name: Set up chroot environment
      run: |
        sudo mkdir -p /opt/chroot/rootfs/src
        sudo cp -r . /opt/chroot/rootfs/src
        echo "Mounting system directories..."
        for dir in proc sys dev dev/pts; do
          sudo mkdir -p /opt/chroot/rootfs/$dir
          sudo mount --bind /$dir /opt/chroot/rootfs/$dir
        done

        echo "Copying qemu-arm-static into chroot..."
        sudo cp /usr/bin/qemu-arm-static /opt/chroot/rootfs/usr/bin/
        sudo rm /opt/chroot/rootfs/etc/resolv.conf
        sudo touch /opt/chroot/rootfs/etc/resolv.conf
        echo "nameserver 1.1.1.1" | sudo tee /opt/chroot/rootfs/etc/resolv.conf
        echo "nameserver 8.8.8.8" | sudo tee -a /opt/chroot/rootfs/etc/resolv.conf
        

    - name: Build gc and libusbgx inside chroot
      run: |
        sudo chroot /opt/chroot/rootfs /bin/bash -c "
          apt update
          DEBIAN_FRONTEND=noninteractive apt install -y build-essential git autoconf automake libtool pkg-config
          # Build libusbgx
          git clone https://github.com/linux-usb-gadgets/libusbgx.git libusbgx
          cd /libusbgx
          ./autogen.sh
          ./configure
          make
          mkdir -p /artifacts
          cp .libs/libusbgx.so /artifacts
          # Build gc
          cd src
          make
          cp gc /artifacts
        "
          
    - name: Copy build artifacts from chroot
      run: |
        cp chroot/artifacts/gc ./gc
        cp chroot/artifacts/libusbgx.so ./libusbgx.so

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v1
      with:
        name: "Release ${{ github.ref_name }}"
        files: |
          ./gc
          ./libusbgx.so
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Cleanup chroot
      run: |
        sudo umount -l chroot/proc || true
        sudo umount -l chroot/sys || true
        sudo umount -l chroot/dev || true
